<!-- templates/index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reddit Search & Analysis Tool</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f6f7f8;
        }
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"], 
        input[type="number"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        .checkbox-group {
            margin: 10px 0;
        }
        button {
            background-color: #0079d3;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }
        button:hover {
            background-color: #005fa3;
        }
        .results {
            margin-top: 20px;
        }
        .post {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 4px;
        }
        .tfidf-analysis {
            margin-top: 20px;
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 4px;
        }
        .term {
            display: inline-block;
            background-color: #e9ecef;
            padding: 3px 8px;
            margin: 2px;
            border-radius: 3px;
            font-size: 14px;
        }
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }
        .error {
            color: red;
            padding: 10px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Reddit Search & Analysis Tool</h1>
        
        <div class="form-group">
            <label for="subreddit">Subreddit:</label>
            <input type="text" id="subreddit" value="all" placeholder="Enter subreddit name">
        </div>
        
        <div class="form-group">
            <label for="query">Search Query:</label>
            <input type="text" id="query" placeholder="Enter your search query">
        </div>
        
        <div class="form-group">
            <label for="limit">Result Limit:</label>
            <input type="number" id="limit" value="10" min="1" max="100">
        </div>
        
        <div class="checkbox-group">
            <input type="checkbox" id="save-results">
            <label for="save-results">Save results to file</label>
        </div>
        
        <button onclick="performSearch()">Search</button>
        
        <div class="loading" id="loading">Searching...</div>
        <div class="error" id="error"></div>
        <div class="results" id="results"></div>
        <div class="tfidf-analysis" id="tfidf-analysis"></div>
    </div>

    <script>
        async function performSearch() {
            const resultsDiv = document.getElementById('results');
            const tfidfDiv = document.getElementById('tfidf-analysis');
            const loadingDiv = document.getElementById('loading');
            const errorDiv = document.getElementById('error');
            
            // Clear previous results and show loading
            resultsDiv.innerHTML = '';
            tfidfDiv.innerHTML = '';
            errorDiv.style.display = 'none';
            loadingDiv.style.display = 'block';
            
            const searchData = {
                subreddit: document.getElementById('subreddit').value,
                query: document.getElementById('query').value,
                limit: document.getElementById('limit').value,
                save: document.getElementById('save-results').checked
            };
            
            try {
                const response = await fetch('/search', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(searchData)
                });
                
                const data = await response.json();
                
                if (!data.success) {
                    throw new Error(data.error);
                }
                
                // Display results
                resultsDiv.innerHTML = '<h2>Search Results</h2>';
                data.posts.forEach(post => {
                    const postDiv = document.createElement('div');
                    postDiv.className = 'post';
                    postDiv.innerHTML = `
                        <h3>${post.title}</h3>
                        <p>URL: <a href="${post.url}" target="_blank">${post.url}</a></p>
                        <p>Score: ${post.score}</p>
                    `;
                    resultsDiv.appendChild(postDiv);
                });
                
                // Display TF-IDF analysis
                if (data.tfidf_analysis.length > 0) {
                    tfidfDiv.innerHTML = '<h2>TF-IDF Analysis</h2>';
                    data.tfidf_analysis.forEach(analysis => {
                        const analysisDiv = document.createElement('div');
                        analysisDiv.className = 'post';
                        analysisDiv.innerHTML = `
                            <h3>Analysis for: ${analysis.title}</h3>
                            <div>
                                ${analysis.terms.map(t => 
                                    `<div class="term">${t.term} (${t.score.toFixed(2)})</div>`
                                ).join('')}
                            </div>
                        `;
                        tfidfDiv.appendChild(analysisDiv);
                    });
                }
            } catch (error) {
                errorDiv.textContent = `Error: ${error.message}`;
                errorDiv.style.display = 'block';
            } finally {
                loadingDiv.style.display = 'none';
            }
        }
    </script>
</body>
</html>
